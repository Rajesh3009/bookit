name: CI

on:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Decode and Create google-services.json
      - name: Decode and Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' | base64 --decode > ./android/app/google-services.json

      # Decode and Create firebase.json
      - name: Decode and Create firebase.json
        run: echo '${{ secrets.FIREBASE_JSON }}' | base64 --decode > ./firebase.json

      # Decode and Create firebase_options.dart
      - name: Decode and Create firebase_options.dart
        run: echo '${{ secrets.FIREBASE_OPTIONS }}' | base64 --decode > ./lib/firebase_options.dart

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Get Version
        id: version
        run: |
          version=$(grep version pubspec.yaml | cut -d: -f2 | tr -d ' "')
          echo "::set-output name=version::$version"

      - name: Build Android Release
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create Tag
        uses: actions/github-script@v6
        id: create_tag
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/v${{ steps.version.outputs.version }}',
              sha: context.sha
            })

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Bookit-Build-${{ steps.version.outputs.version }}-${{ github.run_id }}
          body: Release generated by GitHub Actions
          files: build/app/outputs/flutter-apk/app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
