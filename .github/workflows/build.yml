name: CI

on:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          cat > android/key.properties << EOF
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=keystore.jks
          EOF

      # Decode and Create google-services.json
      - name: Decode and Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' | base64 --decode > ./android/app/google-services.json

      # Decode and Create firebase.json
      - name: Decode and Create firebase.json
        run: echo '${{ secrets.FIREBASE_JSON }}' | base64 --decode > ./firebase.json

      # Decode and Create firebase_options.dart
      - name: Decode and Create firebase_options.dart
        run: echo '${{ secrets.FIREBASE_OPTIONS }}' | base64 --decode > ./lib/firebase_options.dart

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.x"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK & Bundle
        run: |
          flutter build apk --release
          flutter build appbundle

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/ios_build.tar.gz

      - name: Extract Version
        id: version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Modify Tag if Exists
        if: env.TAG_EXISTS == 'true'
        run: |
          echo "VERSION=${env.VERSION}-build-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.TOKEN }}
          generateReleaseNotes: true